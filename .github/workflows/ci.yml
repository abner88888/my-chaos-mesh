# This workflow defines the go and ui related jobs.
#
# We will use the `job` matrix variable to run each subjob. Currently we have:
#
# - verify
# - build
# - test
name: ci

on:
  pull_request:
    branches:
      - master
      - release-*

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      go: ${{ steps.filter.outputs.go }}
      ui: ${{ steps.filter.outputs.ui }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            go:
              - Makefile
              - go.*
              - '**.go'
            ui:
              - 'ui/**'
              - '!ui/README.md'
              - '!ui/.*'
  go:
    needs: changes
    if: ${{ needs.changes.outputs.go == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job:
          - verify
          - build
          - test
    steps:
      - uses: actions/checkout@v2

      - name: Build Chaos Mesh Build Env
        env:
          IMAGE_BUILD_ENV_BUILD: ${{ contains(github.event.pull_request.labels.*.name, 'rebuild-build-env-image') }}
        run: |
          if [ "${IMAGE_BUILD_ENV_BUILD}" = "true" ] ; then
            export IMAGE_BUILD_ENV_BUILD=1;
          else
            export IMAGE_BUILD_ENV_BUILD=0;
          fi

          make image-build-env

      - name: Build Chaos Mesh Dev Env
        env:
          IMAGE_DEV_ENV_BUILD: ${{ contains(github.event.pull_request.labels.*.name, 'rebuild-dev-env-image') }}
        run: |
          if [ "${IMAGE_DEV_ENV_BUILD}" = "true" ] ; then
            export IMAGE_DEV_ENV_BUILD=1;
          else
            export IMAGE_DEV_ENV_BUILD=0;
          fi

          make image-dev-env

      - name: ${{ matrix.job }}
        env:
          job: ${{ matrix.job }}
        run: |
          if [[ "$job" == "verify" ]]; then
            make check
            echo "Please make check before creating a PR"
            git diff --quiet -- . || (git diff | cat && false)
          elif [[ "$job" == "build" ]]; then
            make image
          elif [[ "$job" == "test" ]]; then
            ROOT=$(pwd)
            KUBEBUILDER_ASSETS=${ROOT}/output/bin/kubebuilder/bin make test
          else
            make $job
          fi
  ui:
    needs: changes
    if: ${{ needs.changes.outputs.ui == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ui
    strategy:
      matrix:
        job:
          - build
          - test
        node-version: ["14"] # TODO: add nodejs-16?
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: "ui/yarn.lock"

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Cache app build
        if: ${{ matrix.job == 'build' }}
        uses: actions/cache@v2
        with:
          path: ./ui/app/build
          key: ${{ runner.os }}-yarn-${{ hashFiles('ui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Try build
        if: ${{ matrix.job == 'build' }}
        run: yarn build

      - name: Run UT
        if: ${{ matrix.job == 'test' }}
        run: |
          yarn workspace @ui/mui-extends build
          yarn workspace @ui/app test
