apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: chaos-controller-manager
  labels:
    app.kubernetes.io/name: {{ template "chaos-operator.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: controller-manager
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "chaos-operator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "chaos-operator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: controller-manager
    spec:
    {{- if .Values.controllerManager.serviceAccount }}
      serviceAccount: {{ .Values.controllerManager.serviceAccount }}
    {{- end }}
      containers:
      - name: chaos-operator
        image: {{ .Values.controllerManager.image }}
        imagePullPolicy: {{ .Values.controllerManager.imagePullPolicy | default "IfNotPresent" }}
        resources:
{{ toYaml .Values.controllerManager.resources | indent 12 }}
        command:
          - /usr/local/bin/chaos-controller-manager
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TZ
            value: {{ .Values.timezone | default "UTC" }}
      - name: api-server
        image: {{ .Values.apiServer.image  }}
        imagePullPolicy: {{ .Values.apiServer.imagePullPolicy | default "IfNotPresent" }}
        resources:
{{ toYaml .Values.controllerManager.resources | indent 12 }}
        command:
          - /usr/local/bin/chaos-api-server
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if .Values.apiServer.mysql.datasource }}
          - name: MYSQL_DATASOURCE
            value: {{ .Values.apiServer.mysql.datasource }}
          {{- else}}
          - name: MYSQL_DATASOURCE
            value: root:@localhost:3306/chaos-operator
          {{- end}}

      # Use internal mysql database if no mysql datasource is provided
      {{- if not .Values.apiServer.mysql.datasource }}
      - name: api-server-mysql
        image: mysql
        env:
          - name: MYSQL_DATABASE
            value: chaos-operator
          - name: MYSQL_USER
            value: root
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: true
      {{- end}}
    {{- with .Values.controllerManager.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.controllerManager.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.controllerManager.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
