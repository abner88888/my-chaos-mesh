apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: chaos-controller-manager
  labels:
    app.kubernetes.io/name: {{ template "chaos-operator.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: controller-manager
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "chaos-operator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "chaos-operator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: controller-manager
    spec:
    {{- if .Values.controllerManager.serviceAccount }}
      serviceAccount: {{ .Values.controllerManager.serviceAccount }}
    {{- end }}
      containers:
      - name: chaos-operator
        image: {{ .Values.controllerManager.image }}
        imagePullPolicy: {{ .Values.controllerManager.imagePullPolicy | default "IfNotPresent" }}
        resources:
{{ toYaml .Values.controllerManager.resources | indent 12 }}
        command:
          - /usr/local/bin/chaos-controller-manager
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TZ
            value: {{ .Values.timezone | default "UTC" }}
          - name: CHAOS_DAEMON_PORT
            value: !!str {{ .Values.chaosDaemon.port }}
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
          - name: webhook-config
            mountPath: /etc/webhook/conf
        ports:
          - name: webhook-api
            containerPort: 9443 # Customize containerPort
      volumes:
        - name: webhook-certs
          secret:
            secretName: webhook-certs
        - name: webhook-config
          configMap:
            name: webhook-configmaps
    {{- with .Values.controllerManager.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.controllerManager.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.controllerManager.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
