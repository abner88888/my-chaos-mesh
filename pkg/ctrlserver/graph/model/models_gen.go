// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
	"time"

	v11 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
)

type HTTPChaos struct {
	Kind                       string                 `json:"kind"`
	APIVersion                 string                 `json:"apiVersion"`
	Name                       string                 `json:"name"`
	GenerateName               string                 `json:"generateName"`
	Namespace                  string                 `json:"namespace"`
	SelfLink                   string                 `json:"selfLink"`
	UID                        string                 `json:"uid"`
	ResourceVersion            string                 `json:"resourceVersion"`
	Generation                 int                    `json:"generation"`
	CreationTimestamp          time.Time              `json:"creationTimestamp"`
	DeletionTimestamp          *time.Time             `json:"deletionTimestamp"`
	DeletionGracePeriodSeconds *int                   `json:"deletionGracePeriodSeconds"`
	Labels                     map[string]interface{} `json:"labels"`
	Annotations                map[string]interface{} `json:"annotations"`
	OwnerReferences            []*v1.OwnerReference   `json:"ownerReferences"`
	Finalizers                 []string               `json:"finalizers"`
	ClusterName                string                 `json:"clusterName"`
	Podchaos                   []*PodHTTPChaos        `json:"podchaos"`
}

type IOChaos struct {
	Kind                       string                 `json:"kind"`
	APIVersion                 string                 `json:"apiVersion"`
	Name                       string                 `json:"name"`
	GenerateName               string                 `json:"generateName"`
	Namespace                  string                 `json:"namespace"`
	SelfLink                   string                 `json:"selfLink"`
	UID                        string                 `json:"uid"`
	ResourceVersion            string                 `json:"resourceVersion"`
	Generation                 int                    `json:"generation"`
	CreationTimestamp          time.Time              `json:"creationTimestamp"`
	DeletionTimestamp          *time.Time             `json:"deletionTimestamp"`
	DeletionGracePeriodSeconds *int                   `json:"deletionGracePeriodSeconds"`
	Labels                     map[string]interface{} `json:"labels"`
	Annotations                map[string]interface{} `json:"annotations"`
	OwnerReferences            []*v1.OwnerReference   `json:"ownerReferences"`
	Finalizers                 []string               `json:"finalizers"`
	ClusterName                string                 `json:"clusterName"`
	Podchaos                   []*PodIOChaos          `json:"podchaos"`
}

type Namespace struct {
	Ns          string             `json:"ns"`
	Component   *v11.Pod           `json:"component"`
	Pod         *v11.Pod           `json:"pod"`
	Pods        []*v11.Pod         `json:"pods"`
	Stress      *StressChaos       `json:"stress"`
	Stresses    []*StressChaos     `json:"stresses"`
	Io          *IOChaos           `json:"io"`
	Ios         []*IOChaos         `json:"ios"`
	Podio       *PodIOChaos        `json:"podio"`
	Podios      []*PodIOChaos      `json:"podios"`
	HTTP        *HTTPChaos         `json:"http"`
	HTTPS       []*HTTPChaos       `json:"https"`
	Podhttp     *PodHTTPChaos      `json:"podhttp"`
	Podhttps    []*PodHTTPChaos    `json:"podhttps"`
	Network     *NetworkChaos      `json:"network"`
	Networks    []*NetworkChaos    `json:"networks"`
	Podnetwork  *PodNetWorkChaos   `json:"podnetwork"`
	Podnetworks []*PodNetWorkChaos `json:"podnetworks"`
}

type NetworkChaos struct {
	Kind                       string                 `json:"kind"`
	APIVersion                 string                 `json:"apiVersion"`
	Name                       string                 `json:"name"`
	GenerateName               string                 `json:"generateName"`
	Namespace                  string                 `json:"namespace"`
	SelfLink                   string                 `json:"selfLink"`
	UID                        string                 `json:"uid"`
	ResourceVersion            string                 `json:"resourceVersion"`
	Generation                 int                    `json:"generation"`
	CreationTimestamp          time.Time              `json:"creationTimestamp"`
	DeletionTimestamp          *time.Time             `json:"deletionTimestamp"`
	DeletionGracePeriodSeconds *int                   `json:"deletionGracePeriodSeconds"`
	Labels                     map[string]interface{} `json:"labels"`
	Annotations                map[string]interface{} `json:"annotations"`
	OwnerReferences            []*v1.OwnerReference   `json:"ownerReferences"`
	Finalizers                 []string               `json:"finalizers"`
	ClusterName                string                 `json:"clusterName"`
	Podchaos                   []*NetworkChaos        `json:"podchaos"`
}

type PodHTTPChaos struct {
	Kind                       string                 `json:"kind"`
	APIVersion                 string                 `json:"apiVersion"`
	Name                       string                 `json:"name"`
	GenerateName               string                 `json:"generateName"`
	Namespace                  string                 `json:"namespace"`
	SelfLink                   string                 `json:"selfLink"`
	UID                        string                 `json:"uid"`
	ResourceVersion            string                 `json:"resourceVersion"`
	Generation                 int                    `json:"generation"`
	CreationTimestamp          time.Time              `json:"creationTimestamp"`
	DeletionTimestamp          *time.Time             `json:"deletionTimestamp"`
	DeletionGracePeriodSeconds *int                   `json:"deletionGracePeriodSeconds"`
	Labels                     map[string]interface{} `json:"labels"`
	Annotations                map[string]interface{} `json:"annotations"`
	OwnerReferences            []*v1.OwnerReference   `json:"ownerReferences"`
	Finalizers                 []string               `json:"finalizers"`
	ClusterName                string                 `json:"clusterName"`
	Pod                        *v11.Pod               `json:"pod"`
}

type PodIOChaos struct {
	Kind                       string                 `json:"kind"`
	APIVersion                 string                 `json:"apiVersion"`
	Name                       string                 `json:"name"`
	GenerateName               string                 `json:"generateName"`
	Namespace                  string                 `json:"namespace"`
	SelfLink                   string                 `json:"selfLink"`
	UID                        string                 `json:"uid"`
	ResourceVersion            string                 `json:"resourceVersion"`
	Generation                 int                    `json:"generation"`
	CreationTimestamp          time.Time              `json:"creationTimestamp"`
	DeletionTimestamp          *time.Time             `json:"deletionTimestamp"`
	DeletionGracePeriodSeconds *int                   `json:"deletionGracePeriodSeconds"`
	Labels                     map[string]interface{} `json:"labels"`
	Annotations                map[string]interface{} `json:"annotations"`
	OwnerReferences            []*v1.OwnerReference   `json:"ownerReferences"`
	Finalizers                 []string               `json:"finalizers"`
	ClusterName                string                 `json:"clusterName"`
	Pod                        *v11.Pod               `json:"pod"`
}

type PodNetWorkChaos struct {
	Kind                       string                 `json:"kind"`
	APIVersion                 string                 `json:"apiVersion"`
	Name                       string                 `json:"name"`
	GenerateName               string                 `json:"generateName"`
	Namespace                  string                 `json:"namespace"`
	SelfLink                   string                 `json:"selfLink"`
	UID                        string                 `json:"uid"`
	ResourceVersion            string                 `json:"resourceVersion"`
	Generation                 int                    `json:"generation"`
	CreationTimestamp          time.Time              `json:"creationTimestamp"`
	DeletionTimestamp          *time.Time             `json:"deletionTimestamp"`
	DeletionGracePeriodSeconds *int                   `json:"deletionGracePeriodSeconds"`
	Labels                     map[string]interface{} `json:"labels"`
	Annotations                map[string]interface{} `json:"annotations"`
	OwnerReferences            []*v1.OwnerReference   `json:"ownerReferences"`
	Finalizers                 []string               `json:"finalizers"`
	ClusterName                string                 `json:"clusterName"`
	Pod                        *v11.Pod               `json:"pod"`
}

type StressChaos struct {
	Kind                       string                 `json:"kind"`
	APIVersion                 string                 `json:"apiVersion"`
	Name                       string                 `json:"name"`
	GenerateName               string                 `json:"generateName"`
	Namespace                  string                 `json:"namespace"`
	SelfLink                   string                 `json:"selfLink"`
	UID                        string                 `json:"uid"`
	ResourceVersion            string                 `json:"resourceVersion"`
	Generation                 int                    `json:"generation"`
	CreationTimestamp          time.Time              `json:"creationTimestamp"`
	DeletionTimestamp          *time.Time             `json:"deletionTimestamp"`
	DeletionGracePeriodSeconds *int                   `json:"deletionGracePeriodSeconds"`
	Labels                     map[string]interface{} `json:"labels"`
	Annotations                map[string]interface{} `json:"annotations"`
	OwnerReferences            []*v1.OwnerReference   `json:"ownerReferences"`
	Finalizers                 []string               `json:"finalizers"`
	ClusterName                string                 `json:"clusterName"`
}

type Component string

const (
	ComponentManager   Component = "MANAGER"
	ComponentDaemon    Component = "DAEMON"
	ComponentDashboard Component = "DASHBOARD"
	ComponentDNSServer Component = "DNSSERVER"
)

var AllComponent = []Component{
	ComponentManager,
	ComponentDaemon,
	ComponentDashboard,
	ComponentDNSServer,
}

func (e Component) IsValid() bool {
	switch e {
	case ComponentManager, ComponentDaemon, ComponentDashboard, ComponentDNSServer:
		return true
	}
	return false
}

func (e Component) String() string {
	return string(e)
}

func (e *Component) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = Component(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid Component", str)
	}
	return nil
}

func (e Component) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
