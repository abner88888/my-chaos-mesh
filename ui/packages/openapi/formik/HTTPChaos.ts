/**
 * This file was auto-generated by @ui/openapi.
 * Do not make direct changes to the file.
 */

const shared = [
  {
    field: 'text',
    label: 'abort',
    value: '',
    helperText: 'Optional. Abort is a rule to abort a http session.',
  },
  {
    field: 'text',
    label: 'code',
    value: 0,
    helperText: 'Optional. Code is a rule to select target by http status code in response.',
  },
  {
    field: 'text',
    label: 'delay',
    value: '',
    helperText:
      'Optional. Delay represents the delay of the target request/response. A duration string is a possibly unsigned sequence of decimal numbers, each with optional fraction and a unit suffix, such as \\"300ms\\", \\"2h45m\\". Valid time units are \\"ns\\", \\"us\\" (or \\"\u00B5s\\"), \\"ms\\", \\"s\\", \\"m\\", \\"h\\".',
  },
  {
    field: 'text',
    label: 'method',
    value: '',
    helperText: 'Optional. Method is a rule to select target by http method in request.',
  },
  {
    field: 'text',
    label: 'patch',
    value: '',
    helperText: '',
  },
  {
    field: 'text',
    label: 'path',
    value: '',
    helperText: 'Optional. Path is a rule to select target by uri path in http request.',
  },
  {
    field: 'text',
    label: 'port',
    value: 0,
    helperText: 'Port represents the target port to be proxy of.',
  },
  {
    field: 'text',
    label: 'replace',
    value: '',
    helperText: '',
  },
  {
    field: 'text',
    label: 'request_headers',
    value: '',
    helperText:
      'Optional. RequestHeaders is a rule to select target by http headers in request. The key-value pairs represent header name and header value pairs.',
  },
  {
    field: 'text',
    label: 'response_headers',
    value: '',
    helperText:
      'Optional. ResponseHeaders is a rule to select target by http headers in response. The key-value pairs represent header name and header value pairs.',
  },
  {
    field: 'text',
    label: 'target',
    value: '',
    helperText: 'Target is the object to be selected and injected.',
  },
]

export default shared
