{
  "dashboard": {
    "title": "Dashboard",
    "welcome": "Welcome to Chaos Mesh Dashboard",
    "welcomeDesc": "ðŸ˜Ž Don't know how to start? Click the button below to start a tutorial.",
    "tutorial": {
      "step1": "Dashboard is an overview of Chaos Mesh, where you can observe the running status of all experiments.",
      "step2": "Experiments manages all experiments, where you can perform various operations (pause, archive, update, etc.) on the experiment.",
      "step3": "Events shows the events generated by all experiments.",
      "step4": "Archives shows all archived experiments.",
      "step5": "You can start your first experiment from here.",
      "step6": "Search provides multiple syntaxes to help you locate experiments or events quickly. You can try it after creating an experiment.",
      "step7": "Here you can browse the respective experiments, events and archives by selecting different namespaces.",
      "step8": "Predefined can store custom experiments for quick execution in the future.",
      "step9": "ðŸŽ‰ Congratulations on completing all the tutorial steps! Click the blank space to exit."
    },
    "veteran": "Already a veteran",
    "veteranDesc": "ðŸ§¨ Start with a new experiment! After it's successfully created, you can return the dashboard to observe its status.",
    "totalExperiments": "Total Experiments",
    "totalState": "Total State",
    "predefined": "Predefined",
    "predefinedDesc": "ðŸ“¦ Store custom experiments here for quick execution.",
    "noPredefinedFound": "No predefined found",
    "recent": "Recent"
  },
  "newE": {
    "title": "New experiment",
    "titleStep1": "Choose a Target",
    "titleStep2": "Fill the experiment info",
    "steps": {
      "basic": "Basic",
      "scope": "Scope",
      "scopeDisabled": " (No need to fill in)",
      "schedule": "Schedule"
    },
    "loadFrom": "Load from",
    "basic": {
      "nameHelper": "The experiment name",
      "namespaceHelper": "Select the namespace"
    },
    "scope": {
      "mode": "Mode",
      "modeHelper": "Select the experiment mode",
      "modeValue": "Mode Value",
      "modeValueHelper": "Please fill the mode value",
      "affectedPods": "Affected Pods",
      "affectedPodsPreview": "Affected Pods Preview",
      "affectedPodsPreviewHelper": "Checking or unchecking Pods to further limit the scope of the experiment",
      "noPodsFound": "No pods found"
    },
    "target": {
      "kind": "Kind",
      "action": "Action",
      "pod": {
        "title": "Pod Fault"
      },
      "network": {
        "title": "Network Attack",
        "target": {
          "title": "Target",
          "podsPreview": "Target Pods Preview",
          "podsPreviewHelper": "Checking or unchecking Pods to further limit the scope of the target"
        }
      },
      "io": {
        "title": "IO Injection"
      },
      "kernel": {
        "title": "Kernel Fault"
      },
      "time": {
        "title": "Clock Skew"
      },
      "stress": {
        "title": "Stress Test"
      },
      "dns": {
        "title": "DNS Fault"
      },
      "aws": {
        "title": "AWS Fault"
      },
      "gcp": {
        "title": "GCP Fault"
      }
    },
    "schedule": {
      "tooltip": "Chaos Mesh use {cronv3} to define the schedule. View its doc for more details.",
      "continuous": "Run continuously",
      "mustBeScheduled": "The chosen action must be scheduled",
      "cronHelper": "Use {crontabguru} to help generate the cron job and confirm what time it will run",
      "duration": "Duration",
      "durationHelper": "The experiment duration"
    },
    "complete": "All steps are completed"
  },
  "experiments": {
    "title": "Experiments",
    "single": "Experiment",
    "state": {
      "running": "Running",
      "paused": "Paused",
      "failed": "Failed",
      "waiting": "Waiting",
      "finished": "Finished"
    },
    "noExperimentsFound": "No experiments found",
    "createdAt": "Created",
    "deleteMulti": "Archive selected experiments",
    "deleteDesc": "You can still find this experiment in the archives",
    "pauseDesc": "You can restart the experiment in the same position",
    "startDesc": "The operation will take effect immediately"
  },
  "workflows": {
    "title": "Workflows",
    "noWorkflowsFound": "No workflows found",
    "deleteDesc": "This workflow will be permanently deleted"
  },
  "workflow": {
    "entry": "Entry",
    "time": "Time",
    "state": "State",
    "topology": "Topology"
  },
  "newW": {
    "title": "New Workflow",
    "node": {
      "choose": "Choose task type",
      "single": "Single",
      "serial": "Serial",
      "parallel": "Parallel",
      "suspend": "Suspend",
      "number": "Number",
      "chooseChildren": "Choose child task",
      "nameHelper": "The task name",
      "nameValidation": "The task name is required",
      "durationHelper": "The task duration",
      "durationValidation": "The task duration is required",
      "deleteDesc": "This task will be deleted",
      "submitAll": "Submit All"
    },
    "serialTitle": "Set serial",
    "parallelTitle": "Set parallel",
    "suspendTitle": "Set suspend",
    "nameHelper": "The workflow name",
    "nameValidation": "The workflow name is required",
    "durationHelper": "The workflow duration",
    "durationValidation": "The workflow duration is required",
    "submit": "Submit workflow",
    "messages": {
      "m1": "Please complete the creation of the current node first"
    }
  },
  "events": {
    "title": "Events",
    "noEventsFound": "No events found",
    "eventsPerPage": "Events per page",
    "event": {
      "experiment": "Experiment",
      "uuid": "UUID",
      "namespace": "Namespace",
      "kind": "Kind",
      "started": "Started",
      "ended": "Ended",
      "pod": {
        "action": "Action",
        "message": "Message"
      }
    }
  },
  "archives": {
    "title": "Archives",
    "single": "Archive",
    "noArchivesFound": "No archives found",
    "deleteMulti": "Delete selected archives",
    "deleteDesc": "The Archive will be permanently deleted",
    "numberOfRuns": "Number of Runs",
    "numberOfAffectedPods": "Number of Affected Pods"
  },
  "settings": {
    "title": "Settings",
    "debugMode": {
      "title": "Debug mode",
      "choose": "Creating an experiment will not send the real HTTP request, but will print relevant information in the console"
    },
    "enableKubeSystemNS": {
      "title": "Kube System namespace",
      "choose": "Allow to select the kube-system namespace in the scope when creating the experiment"
    },
    "theme": {
      "title": "Theme",
      "choose": "Choose theme",
      "light": "Light",
      "dark": "Dark"
    },
    "lang": {
      "title": "Language",
      "choose": "Choose interface language",
      "en": "English",
      "zh": "Chinese"
    },
    "addToken": {
      "prompt": "Enter the token (RBAC Authorization) to continue",
      "prompt2": "Don't know how to get the token?",
      "prompt3": "Click here to generate.",
      "generator": "Token generator",
      "generatorHelper": "ðŸ‘‡ Generate different tokens by choosing different namespaces and roles.",
      "generatorHelper2": "1. After choosing, save below content as rbac.yaml.",
      "generatorHelper3": "2. Then run the following command:",
      "generatorHelper4": "3. Finally, get the token:",
      "clustered": "Cluster scoped",
      "role": "Role",
      "roleHelper": "Choose role",
      "title": "Add Token",
      "nameHelper": "Please fill the token name",
      "nameValidation": "The token name is required",
      "token": "Token",
      "tokenHelper": "Please fill the secret token",
      "tokenValidation": "The token is required",
      "duplicateDesc": "Token name can't be duplicate",
      "deleteDesc": "The operation is irreversible"
    }
  },
  "swagger": {
    "title": "Swagger API"
  },
  "search": {
    "placeholder": "Search",
    "tip": {
      "title": "Use the following syntax to quickly locate events, experiments and archives:",
      "namespace": "namespace:default xxx will search for events, experiments and archives with namespace default",
      "kind": "kind:NetworkChaos xxx will search for events, experiments and archives with kind NetworkChaos",
      "pod": "pod:echoserver will search for events by affected Pod",
      "ip": "ip:172.17.0.6 is will search for events by Pod IP"
    },
    "result": {
      "acquiring": "Acquiring...",
      "noResult": "No result"
    }
  },
  "common": {
    "add": "Add",
    "advancedOptions": "Advanced Options",
    "batchOperation": "Batch operation",
    "cancel": "Cancel",
    "chooseNamespace": "Choose namespace",
    "close": "Close",
    "configuration": "Configuration",
    "confirm": "Confirm",
    "copied": "Copied!",
    "copy": "Copy",
    "delete": "Delete",
    "detail": "Detail",
    "doc": "Documentation",
    "download": "Download",
    "ip": "IP address",
    "isKVHelperText": "Type key:value and end with a space to generate a key/value pair",
    "meta": "Meta",
    "multiOptions": "Support mutiple options",
    "name": "Name",
    "noOptions": "No options",
    "operation": "Operation",
    "other": "Other",
    "pause": "Pause",
    "preview": "Preview",
    "process": "Process",
    "selectAll": "Select all",
    "start": "Start",
    "status": "Status",
    "submit": "Submit",
    "timeline": "Timeline",
    "tutorial": "Tutorial",
    "update": "Update",
    "upload": "Upload",
    "use": "Use",
    "using": "Using",
    "uuid": "UUID",
    "version": "Version"
  },
  "table": {
    "created": "Created at"
  },
  "confirm": {
    "archiveSuccessfully": "Archived successfully",
    "createSuccessfully": "Created successfully",
    "deleteSuccessfully": "Deleted successfully",
    "loadSuccessfully": "Loaded successfully",
    "pauseSuccessfully": "Paused successfully",
    "updateSuccessfully": "Updated successfully",
    "startSuccessfully": "Started successfully",
    "submitSuccessfully": "Submitted successfully"
  },
  "k8s": {
    "namespace": "Namespace",
    "labels": "Labels",
    "annotations": "Annotations",
    "namespaceSelectors": "Namespace Selectors",
    "labelSelectors": "Label Selectors",
    "annotationsSelectors": "Annotation Selectors",
    "phaseSelectors": "Phase Selectors"
  }
}
